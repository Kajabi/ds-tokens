name: DS Tokens Release

on:
  workflow_call:
    inputs:
      preid:
        description: 'The prerelease id used when doing a prerelease. e.g prerelease, premajor, preminor, etc.'
        type: string
        default: ''

      ref:
        description: 'This could be a branch name, tag, or a SHA.'
        type: string
        default: ''

      tag:
        description: 'The tag to publish on NPM.'
        required: true
        type: string

      version:
        description: 'The type of version to release.'
        required: true
        type: string

    secrets:
      NPM_TOKEN:
        required: true

  workflow_dispatch:
    inputs:
      preid:
        type: string
        description: Which prerelease id should be used? This is only needed when a version is "prepatch", "preminor", "premajor", or "prerelease".
        default: ''
          # - ''
          # - alpha
          # - beta
          # - rc
          # - next

      ref:
        type: string
        description: The branch name, tag, or SHA to be checked out. This can also be left blank.
        default: ''

      tag:
        type: choice
        required: true
        description: Which npm tag should this be published to?
        options:
          - latest
          - next
          - dev

      version:
        type: choice
        description: Which version should be published?
        options:
          - ''
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease

jobs:
  release:
    permissions:
      contents: write
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup
        uses: ./.github/workflows/actions/setup
        with:
          token: ${{ secrets.NPM_TOKEN }}

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npx nx run-many --target=build --all

      - name: Prepare NPM Token
        run: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} >> .npmrc
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Release
        if: ${{ inputs.version == '' }}
        run: npx nx release --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

        ### Steps below are used for releasing a specified version type (major, minor, patch, etc.)
      - name: Release with Input Version
        if: ${{ inputs.version != '' }}
        run: npx nx release ${{ github.event.inputs.version }} --preid ${{ inputs.preid }} --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true

      - name: Report DS Tokens production deployment to GetDX
        if: ${{ success() }}
        uses: Kajabi/getdx-deployment-identifier-action@main
        with:
          getdx-instance-name: 'kajabi'
          getdx-token: ${{ secrets.GETDX_DEPLOYMENT_TOKEN }}
          service-name: 'ds-tokens'
